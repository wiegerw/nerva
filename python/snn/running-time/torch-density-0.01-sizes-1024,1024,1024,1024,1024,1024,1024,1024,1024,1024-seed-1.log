=== Command line arguments ===
Namespace(debug=False, batch_size=100, seed=1, precision=4, edgeitems=3, density=0.01, sizes='3072,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,10', epochs=1, lr=0.1, momentum=0.9, gamma=0.1, nesterov=True, datadir='./data', augmented=False, preprocessed=None, copy=False, nerva=False, torch=True, scheduler='multistep', export_weights_npz=None, import_weights_npz=None, custom_masking=False)
Setting gamma to 1.0
Files already downloaded and verified
initialize by ER
Overall sparsity 0.009999999999999998
Total Model parameters: 12593152
Total parameters under sparsity level of 0.01: 0.009980186056675883
initialize by ER
Overall sparsity 0.009999999999999998
Total Model parameters: 25186304
Total parameters under sparsity level of 0.01: 0.0003262090380549683

=== PyTorch model ===
MLP1(
  (layers): ModuleList(
    (0): Linear(in_features=3072, out_features=1024, bias=True)
    (1): Linear(in_features=1024, out_features=1024, bias=True)
    (2): Linear(in_features=1024, out_features=1024, bias=True)
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): Linear(in_features=1024, out_features=1024, bias=True)
    (5): Linear(in_features=1024, out_features=1024, bias=True)
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): Linear(in_features=1024, out_features=1024, bias=True)
    (8): Linear(in_features=1024, out_features=1024, bias=True)
    (9): Linear(in_features=1024, out_features=1024, bias=True)
    (10): Linear(in_features=1024, out_features=10, bias=True)
  )
  (loss): CrossEntropyLoss()
)
CrossEntropyLoss()
<torch.optim.lr_scheduler.MultiStepLR object at 0x7f07f00a4460>

=== Training PyTorch model ===
epoch   0  lr: 0.10000000  loss: 2.30281115  train accuracy: 0.10000000  test accuracy: 0.10000000  time: 0.00000000s
epoch   1  lr: 0.10000000  loss: 2.30445552  train accuracy: 0.10000000  test accuracy: 0.10000000  time: 69.58036121s
Accuracy of the network on the 10000 test images: 10.000 %
