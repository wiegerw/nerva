=== Command line arguments ===
Namespace(debug=False, batch_size=100, seed=1, precision=4, edgeitems=3, density=0.01, sizes='3072,16384,16384,16384,10', epochs=1, lr=0.1, momentum=0.9, gamma=0.1, nesterov=True, datadir='./data', augmented=False, preprocessed=None, copy=False, nerva=False, torch=True, scheduler='multistep', export_weights_npz=None, import_weights_npz=None, custom_masking=True)
Setting gamma to 1.0
Files already downloaded and verified
initialize by ER
Overall sparsity 0.01
Total Model parameters: 587366400
Total parameters under sparsity level of 0.01: 0.010002354577994248
initialize by ER
Overall sparsity 0.01
Total Model parameters: 1174732800
Total parameters under sparsity level of 0.01: 0.0003984225178695955
Use MLP1 variant with custom masking
Setting masks with densities [0.02596911081827309, 0.008200771837349397, 0.008200771837349397, 1.0]
--- masks ---
mask1 (16384x3072)
tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 1, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], dtype=torch.int32)
mask2 (16384x16384)
tensor([[0, 1, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], dtype=torch.int32)
mask3 (16384x16384)
tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], dtype=torch.int32)

=== PyTorch model ===
MLP1a(
  (layers): ModuleList(
    (0): Linear(in_features=3072, out_features=16384, bias=True)
    (1): Linear(in_features=16384, out_features=16384, bias=True)
    (2): Linear(in_features=16384, out_features=16384, bias=True)
    (3): Linear(in_features=16384, out_features=10, bias=True)
  )
  (loss): CrossEntropyLoss()
)
CrossEntropyLoss()
<torch.optim.lr_scheduler.MultiStepLR object at 0x7fda0e5ac070>

=== Training PyTorch model ===
epoch   0  lr: 0.10000000  loss: 2.30259991  train accuracy: 0.10000000  test accuracy: 0.10000000  time: 0.00000000s
epoch   1  lr: 0.10000000  loss: 1.91424310  train accuracy: 0.29846000  test accuracy: 0.29800000  time: 1669.89578308s
Accuracy of the network on the 10000 test images: 29.800 %
