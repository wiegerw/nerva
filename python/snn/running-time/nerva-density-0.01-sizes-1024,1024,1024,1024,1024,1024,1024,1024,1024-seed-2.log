Unrecognized token: --datadir=./data
epochs = 1
batch size = 100
shuffle = false
statistics = true
debug = false
algorithm = minibatch
dataset = cifar10
dataset size = 50000
normalize data = false
learning rate scheduler = multistep_lr(0.1;50,75;0.1)
loss function = softmax-cross-entropy
architecture = RRRRRRRRRL
sizes = [3072, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 10]
weights initialization = xxxxxxxxxx
optimizer = nesterov(0.9)
dropout = 0
density = 0.01
densities = [0.00698667, 0.01048, 0.01048, 0.01048, 0.01048, 0.01048, 0.01048, 0.01048, 0.01048, 0.541816]
seed = 2
precision = 4
threads = 4
number type = float

Sparse(units=1024, density=0.00696977, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010456085, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010469437, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010350227, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.0104522705, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010596275, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010494232, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010432243, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=1024, density=0.010387421, optimizer=Nesterov(0.90000), activation=ReLU())
Sparse(units=10, density=0.5428711, optimizer=Nesterov(0.90000), activation=NoActivation())

epoch   0 lr: 0.10000000  loss: 2.30258286  train accuracy: 0.10270000  test accuracy: 0.10280000 time: 0.00000000s
epoch   1 lr: 0.10000000  loss: 2.30258286  train accuracy: 0.10270000  test accuracy: 0.10280000 time: 9.57781792s
Accuracy of the network on the 10000 test examples: 10.28%
Total training time for the 1 epochs: 9.57781828s
